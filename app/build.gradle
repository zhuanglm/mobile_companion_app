import com.github.triplet.gradle.androidpublisher.ReleaseStatus

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'com.github.triplet.play'
}

android {
    compileSdk compile_sdk

    defaultConfig {
        applicationId "com.esightcorp.mobile.app.companion"
        minSdk min_sdk
        targetSdk target_sdk
        versionCode project.hasProperty('BUILD_NUMBER') ? project.property('BUILD_NUMBER').toInteger() : 4
        versionName "0.1." + (project.hasProperty('BUILD_NUMBER') ? project.property('BUILD_NUMBER') : "0")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled true

            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ext.config = getProps('../config/release.properties')
            ext.config.each { p ->
                if (p.key == "APPLICATION_ID_SUFFIX") {
                    applicationIdSuffix p.value
                } else {
                    buildConfigField 'String', p.key, p.value
                }
            }
        }
        debug {
            debuggable true
            ext.config = getProps('../config/debug.properties')
            ext.config.each { p ->
                if (p.key == "APPLICATION_ID_SUFFIX") {
                    applicationIdSuffix p.value
                } else {
                    buildConfigField 'String', p.key, p.value
                }
            }
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.esightcorp.mobile.app.companion'
    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            events "started", "skipped", "passed", "failed"
            showStandardStreams true
        }
    }
}

play {
    serviceAccountCredentials = file(GOOGLE_PLAY_API_KEY)
    track.set('internal')
    //TODO- change this after its not a draft app
    releaseStatus.set(ReleaseStatus.DRAFT)
}

dependencies {

    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ui_ktx"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime"
    testImplementation "junit:junit:$junit_testimpl"
    androidTestImplementation "androidx.test.ext:junit:$junit_android"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"

    // Integration with activities
    implementation "androidx.activity:activity-compose:$activity_compose"
    // Compose Material Design
    implementation "androidx.compose.material:material:$compose_material"
    // Animations
    implementation "androidx.compose.animation:animation:$animations"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$ui_tooling"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_viewmodel_compose"
    // UI Tests
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose"

    //hilt dependencies
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_nav_compose"

    //compose dependencies
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose"
    implementation "androidx.navigation:navigation-compose:$nav"

    //module imports
    implementation(project(":modules:feature:home"))
    implementation(project(":modules:feature:eshare"))
    implementation(project(":modules:feature:btconnection"))
    implementation(project(":modules:feature:wificonnection"))
    implementation(project(":modules:feature:settings"))
    implementation(project(":modules:core:bluetooth"))
    implementation(project(":modules:core:ui"))

    implementation "com.google.accompanist:accompanist-permissions:0.27.0"


}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

kapt {
    correctErrorTypes = true
}
